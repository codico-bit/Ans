module original(A, B, C, OUTPUT);
    input A, B, C;
    output OUTPUT;

    //gate flow
    wire x1, x2, x3, x4, x5;
    not(x1, A);
    not(x2, C);
    and(x3, x1, x2);
    and(x4, A, B, C);
    and(x5, A, x2);
    or(OUTPUT, x3, x4, x5);

    // //data flow
    // assign OUTPUT = (~A & ~C) | (A & B & C) | (A & ~C);

    // //behaviuoral modelling
    // reg OUTPUT;
    // always@(A or B or C) begin 
    //     if(A == 0 && C == 0) 
    //         OUTPUT = 1;
    //     else if(A == 1 && B == 1 && C == 1)
    //         OUTPUT = 1;
    //     else if(A == 1 && C == 0)
    //         OUTPUT = 1;
    //     else 
    //         OUTPUT = 0;

    // end



endmodule


module simplified (A, B, C, OUTPUT);
    input A, B, C;
    output OUTPUT;

    //GATE LEVEL
    wire x1, x2;
    not(x1, C);
    and(x2, A, B);
    or(OUTPUT, x1, x2);

    // //behavioural level
    // reg OUTPUT;
    // always@(A or B or C) begin 
    //     if(C == 0) OUTPUT = 1;
    //     else if(A == 1 && B == 1) OUTPUT = 1;
    //     else OUTPUT = 0;
    // end

    // // data flow
    // assign OUTPUT = (~C) | (A & B);




endmodule
