$date
	Mon Aug 12 15:55:03 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testGate $end
$var wire 1 ! simple $end
$var wire 1 " original $end
$var reg 1 # A $end
$var reg 1 $ B $end
$var reg 1 % C $end
$scope module testO $end
$var wire 1 # A $end
$var wire 1 $ B $end
$var wire 1 % C $end
$var wire 1 " OUTPUT $end
$var wire 1 & x1 $end
$var wire 1 ' x2 $end
$var wire 1 ( x3 $end
$var wire 1 ) x4 $end
$var wire 1 * x5 $end
$upscope $end
$scope module testS $end
$var wire 1 # A $end
$var wire 1 $ B $end
$var wire 1 % C $end
$var wire 1 ! OUTPUT $end
$var wire 1 + x1 $end
$var wire 1 , x2 $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 - i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 -
0,
1+
0*
0)
1(
1'
1&
0%
0$
0#
1"
1!
$end
#10
0"
0(
0!
0'
0+
1%
b1 -
#20
1"
1(
1!
1'
1+
1$
0%
b10 -
#30
0"
0(
0!
0'
0+
1%
b11 -
#40
1"
1!
0&
1*
1'
1+
1#
0$
0%
b100 -
#50
0"
0*
0!
0'
0+
1%
b101 -
#60
1"
1*
1!
1,
1'
1+
1$
0%
b110 -
#70
0*
0'
1)
0+
1%
b111 -
#80
b1000 -
